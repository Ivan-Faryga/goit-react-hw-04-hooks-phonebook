{"version":3,"sources":["Components/Form/Form.module.css","Components/ContactList/ContactListItem/ContactListItem.module.css","Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/Form/Form.jsx","Components/ContactList/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","event","currentTarget","value","reset","uniqueIdName","uuid","uniqueIdNumber","e","preventDefault","htmlFor","className","s","formLabel","id","type","pattern","title","required","onChange","formInput","formBtn","ContactListItem","onDelete","contactItem","contactName","contactNumber","deleteContactBtn","onClick","ContactList","contacts","contactsList","map","contact","Filter","filterInputLabel","filterInput","placeholder","initialState","App","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","object","includes","trim","alert","newObject","uuidv4","evt","filterToLowerCase","toLocaleLowerCase","handleInputFilter","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cefc188b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"Form_formLabel__32rrv\",\"formInput\":\"Form_formInput__acijd\",\"formBtn\":\"Form_formBtn__22oWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3GHmR\",\"contactName\":\"ContactListItem_contactName__3M1zV\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__U27u0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__15CVd\",\"filterInput\":\"Filter_filterInput__JIWbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3qzDl\"};","import { useState } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport s from \"./Form.module.css\";\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const addedNewContact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    onSubmit(addedNewContact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const uniqueIdName = uuid();\r\n  const uniqueIdNumber = uuid();\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor={uniqueIdName} className={s.formLabel}>\r\n        Name\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <label htmlFor={uniqueIdNumber} className={s.formLabel}>\r\n        Number\r\n      </label>\r\n      <br />\r\n      <input\r\n        id={uniqueIdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleInputChange}\r\n        className={s.formInput}\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// export default Form;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDelete }) => (\r\n  <li className={s.contactItem}>\r\n    <p className={s.contactName}>\r\n      {name}: <span className={s.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={s.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul className={s.contactsList}>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onDelete: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={s.filterInputLabel}>Find contacts by name</label>\r\n    <br />\r\n    <input\r\n      className={s.filterInput}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"Contact\"\r\n    />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport \"./App.css\";\nimport Filter from \"./Filter/Filter\";\n\nconst initialState = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  // забираем данные из локал-сторадж при маунте компонента\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    setContacts(parsedContacts ? parsedContacts : initialState);\n  }, []);\n\n  // добавляем данные из локал-сторадж при апдейте компонента\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = (object) => {\n    const { name, number } = object;\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\n      return alert(`\"${name.trim()}\" is already in contacts`);\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\n      return alert(`\"${number.trim()}\" is already in contacts`);\n\n    const newObject = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    setContacts([...contacts, newObject]);\n  };\n\n  const handleInputFilter = () => {\n    const filterToLowerCase = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().trim().includes(filterToLowerCase)\n    );\n  };\n\n  const handleInputChange = (evt) => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts([...contacts.filter((contact) => contact.id !== contactId)]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"InputWrapper\">\n        <h1 className=\"inputTitle\">Phonebook</h1>\n        <Form onSubmit={formSubmitHandler} />\n        <br />\n        <Filter value={filter} onChange={handleInputChange} />\n      </div>\n      <div className=\"contactsSection\">\n        <h2 className=\"contactsSectionTitle\">Contacts</h2>\n        <ContactList contacts={handleInputFilter()} onDelete={deleteContact} />\n      </div>\n    </div>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//   };\n\n// componentDidMount() {\n//   const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n//   //====// const contacts = localStorage.getItem(\"contacts\");\n//   //====// const parsedContacts = JSON.parse(contacts);\n//   //====// this.setState({ contacts: parsedContacts });\n\n//   //====// if (parsedContacts !== null) {\n//   //====//   this.setState({ contacts: parsedContacts });\n//   //====// }\n\n//   this.setState({ contacts: parsedContacts ?? initialState }); // ??  --- https://learn.javascript.ru/nullish-coalescing-operator\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   if (this.state.contacts !== prevState.contacts) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"InputWrapper\">\n//           <h1 className=\"inputTitle\">Phonebook</h1>\n//           <Form onSubmit={this.formSubmitHandler} />\n//           <br />\n//           <Filter value={this.state.filter} onChange={this.handleInputChange} />\n//         </div>\n//         <div className=\"contactsSection\">\n//           <h2 className=\"contactsSectionTitle\">Contacts</h2>\n//           <ContactList\n//             contacts={this.handleInputFilter()}\n//             onDelete={this.deleteContact}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}